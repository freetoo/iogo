// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: applogic/applogic.proto

#ifndef PROTOBUF_INCLUDED_applogic_2fapplogic_2eproto
#define PROTOBUF_INCLUDED_applogic_2fapplogic_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_applogic_2fapplogic_2eproto 

namespace protobuf_applogic_2fapplogic_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_applogic_2fapplogic_2eproto
namespace proto {
class SayReply;
class SayReplyDefaultTypeInternal;
extern SayReplyDefaultTypeInternal _SayReply_default_instance_;
class SayRequest;
class SayRequestDefaultTypeInternal;
extern SayRequestDefaultTypeInternal _SayRequest_default_instance_;
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::SayReply* Arena::CreateMaybeMessage<::proto::SayReply>(Arena*);
template<> ::proto::SayRequest* Arena::CreateMaybeMessage<::proto::SayRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {

// ===================================================================

class SayRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SayRequest) */ {
 public:
  SayRequest();
  virtual ~SayRequest();

  SayRequest(const SayRequest& from);

  inline SayRequest& operator=(const SayRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SayRequest(SayRequest&& from) noexcept
    : SayRequest() {
    *this = ::std::move(from);
  }

  inline SayRequest& operator=(SayRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SayRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SayRequest* internal_default_instance() {
    return reinterpret_cast<const SayRequest*>(
               &_SayRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SayRequest* other);
  friend void swap(SayRequest& a, SayRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SayRequest* New() const final {
    return CreateMaybeMessage<SayRequest>(NULL);
  }

  SayRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SayRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SayRequest& from);
  void MergeFrom(const SayRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SayRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:proto.SayRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_applogic_2fapplogic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SayReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SayReply) */ {
 public:
  SayReply();
  virtual ~SayReply();

  SayReply(const SayReply& from);

  inline SayReply& operator=(const SayReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SayReply(SayReply&& from) noexcept
    : SayReply() {
    *this = ::std::move(from);
  }

  inline SayReply& operator=(SayReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SayReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SayReply* internal_default_instance() {
    return reinterpret_cast<const SayReply*>(
               &_SayReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SayReply* other);
  friend void swap(SayReply& a, SayReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SayReply* New() const final {
    return CreateMaybeMessage<SayReply>(NULL);
  }

  SayReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SayReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SayReply& from);
  void MergeFrom(const SayReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SayReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Flag = 1;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  const ::std::string& flag() const;
  void set_flag(const ::std::string& value);
  #if LANG_CXX11
  void set_flag(::std::string&& value);
  #endif
  void set_flag(const char* value);
  void set_flag(const char* value, size_t size);
  ::std::string* mutable_flag();
  ::std::string* release_flag();
  void set_allocated_flag(::std::string* flag);

  // @@protoc_insertion_point(class_scope:proto.SayReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_applogic_2fapplogic_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SayRequest

// string Text = 1;
inline void SayRequest::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SayRequest::text() const {
  // @@protoc_insertion_point(field_get:proto.SayRequest.Text)
  return text_.GetNoArena();
}
inline void SayRequest::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SayRequest.Text)
}
#if LANG_CXX11
inline void SayRequest::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SayRequest.Text)
}
#endif
inline void SayRequest::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SayRequest.Text)
}
inline void SayRequest::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SayRequest.Text)
}
inline ::std::string* SayRequest::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:proto.SayRequest.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SayRequest::release_text() {
  // @@protoc_insertion_point(field_release:proto.SayRequest.Text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SayRequest::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.SayRequest.Text)
}

// -------------------------------------------------------------------

// SayReply

// string Flag = 1;
inline void SayReply::clear_flag() {
  flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SayReply::flag() const {
  // @@protoc_insertion_point(field_get:proto.SayReply.Flag)
  return flag_.GetNoArena();
}
inline void SayReply::set_flag(const ::std::string& value) {
  
  flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SayReply.Flag)
}
#if LANG_CXX11
inline void SayReply::set_flag(::std::string&& value) {
  
  flag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SayReply.Flag)
}
#endif
inline void SayReply::set_flag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SayReply.Flag)
}
inline void SayReply::set_flag(const char* value, size_t size) {
  
  flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SayReply.Flag)
}
inline ::std::string* SayReply::mutable_flag() {
  
  // @@protoc_insertion_point(field_mutable:proto.SayReply.Flag)
  return flag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SayReply::release_flag() {
  // @@protoc_insertion_point(field_release:proto.SayReply.Flag)
  
  return flag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SayReply::set_allocated_flag(::std::string* flag) {
  if (flag != NULL) {
    
  } else {
    
  }
  flag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flag);
  // @@protoc_insertion_point(field_set_allocated:proto.SayReply.Flag)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_applogic_2fapplogic_2eproto
